server.port=8088
spring.application.name=gicorp-consumer
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8001/eureka/

#熔断
feign.hystrix.enabled=true

spring.cloud.bus.refresh.enabled=true
spring.cloud.stream.default-binder=kafka
spring.kafka.bootstrap-servers=localhost:9092
management.endpoints.web.exposure.include=bus-refresh
#config动态刷新
spring.cloud.bus.id=${spring.application.name}:${spring.cloud.config.profile}:${random.value}


#消费者配置
kafka.consumer.servers=127.0.0.1:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=20000
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=test
kafka.consumer.group.id=test
kafka.consumer.concurrency=10


#是否重试
spring.cloud.loadbalancer.retry.enabled=true
#启用hystrix
feign.hystrix.enabled=true
#启用okhttp连接方法
feign.httpclient.enabled=false
feign.okhttp.enabled=true
feign.okhttp.max-connections=200
feign.okhttp.max-connections-per-route=50
feign.client.connect.timeout=5000
feign.client.read.timeout=5000
feign.client.write.timeout=10000
feign.client.max.idle.connections=10
feign.client.keep.alive.duration=5


#开启feign请求和响应
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#支持压缩
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048
#开启ribbon加载模式
ribbon.eager-load.enabled=true
#指定需要饥饿加载的服务名
ribbon.eager-load.clients=gicorp-producer-service


